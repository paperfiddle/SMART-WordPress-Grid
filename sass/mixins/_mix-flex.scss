//
// @file /mixins/_mix-flex.scss
//


@mixin display-grid {
    display: -ms-grid;
    display: grid;
} // @mixin

@mixin display-flex {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
} // @mixin





// `flex-flow` - Grid only
// $direction = row, row-reverse, column, column-reverse
// $wrap = wrap, nowrap, wrap-reverse

@mixin flex-flow($direction:row, $wrap:nowrap) {

	@if $direction == row {
		-webkit-box-orient: horizontal;
		-webkit-box-direction: normal;
	}
	@if $direction == row-reverse {
		-webkit-box-orient: horizontal;
		-webkit-box-direction: reverse;
	}
	@if $direction == column {
		-webkit-box-orient: vertical;
		-webkit-box-direction: normal;
	}
	@if $direction == column-reverse {
		-webkit-box-orient: vertical;
		-webkit-box-direction: reverse;
	}

    -ms-flex-flow: $direction $wrap;
        flex-flow: $direction $wrap;

} // @mixin


// `justify-content` - Grid + Flex

@mixin justify-content($justify:start) {

	@if $justify == start or $justify == flex-start { // default
		-webkit-box-pack: start;
			-ms-flex-pack: start;
	}
	@if $justify == end or $justify == flex-end {
		-webkit-box-pack: end;
			-ms-flex-pack: end;
	}	
	@if $justify == center {
		-webkit-box-pack: center;
			-ms-flex-pack: center;
	}
	@if $justify == stretch { // grid only
		-webkit-box-pack: stretch;
			-ms-flex-pack: stretch;
	}
	@if $justify == space-between {
		-webkit-box-pack: justify;
			-ms-flex-pack: justify;
	}
	@if $justify == space-around {
		// no -webkit here
		-ms-flex-pack: distribute;
	}
	@if $justify == space-evenly {
		-webkit-box-pack: space-evenly;
			-ms-flex-pack: space-evenly;
	}

	justify-content: $justify;

} // @mixin 


// `align-items` - Flex + Grid

@mixin align-items($align:stretch) {

	@if $align == start or $align == flex-start {
		-webkit-box-align: start;
			-ms-flex-align: start;
	}
	@if $align == end or $align == flex-end {
		-webkit-box-align: end;
			-ms-flex-align: end;
	}
	@if $align == center {
		-webkit-box-align: center;
			-ms-flex-align: center;
	}
	@if $align == stretch { // default 
		-webkit-box-align: stretch;
			-ms-flex-align: stretch;
	}
	@if $align == baseline { // flex only
		-webkit-box-align: baseline;
			-ms-flex-align: baseline;
	}

	align-items: $align;

} // @mixin 


// `align-content - Flex - Grid

@mixin align-content($align:stretch) {

	@if $align == start or $align == flex-start {
		-ms-flex-line-pack: start;
	}
	@if $align == end or $align == flex-end {
		-ms-flex-line-pack: end;
	}
	@if $align == center {
		-ms-flex-line-pack: center;
	}
	@if $align == stretch { // default
		-ms-flex-line-pack: stretch;
	}
	@if $align == space-between {
		-ms-flex-line-pack: justify;
	}
	@if $align == space-around {
		-ms-flex-line-pack: distribute;			
	}
	@if $align == space-evenly { // grid only
		-ms-flex-line-pack: space-evenly;
	}

	align-content: $align;

} // @mixin



// `order` - Flex only

@mixin flex-order($order:0) {
	-webkit-box-ordinal-group: $order+1;
		-ms-flex-order: $order;
			order: $order;
} // @mixin


// `flex` - Flex only
// $grow = similar to grid fr where 0 is 'don't grow'
// $shrink = similar to grid fr where 0 is 'don't shrink'
// $basis = auto = element's natural width 
//        = Unit of measure = elements width 

@mixin flex-flex($grow, $shrink, $basis) {
	-webkit-box-flex: $grow;
		-ms-flex: $grow $shrink $basis;
			flex: $grow $shrink $basis;
} // @mixin



@mixin align-self($align:stretch) {

	@if $align == flex-start {
		-ms-flex-item-align: start;
			-ms-grid-row-align: start;
	}
	@if $align == flex-end {
		-ms-flex-item-align: end;
			-ms-grid-row-align: end;
	}
	@if $align == center {
		-ms-grid-row-align: center;
			align-self: center;
	}
	@if $align == stretch { // default
		-ms-flex-item-align: stretch;
			-ms-grid-row-align: stretch;
	}	
	@if $align == baseline { // flex only
		// no -webkit here
		 -ms-flex-item-align: baseline;
	}
	@if $align == auto { // flex only
		-ms-flex-item-align: auot;
			-ms-grid-row-align: auot;
	}

	align-self: $align;

} // @mixin



// Grid properties that don't have vendor prefixes
// @mixin grid-gap {}
// @mixin justiy-items {} // start, end, center, stretch